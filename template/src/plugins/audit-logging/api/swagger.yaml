openapi: 3.0.3
info:
  title: AI-First SaaS React Starter - Audit Logging API
  description: |
    Audit Logging API endpoints for tracking and retrieving system audit logs.

    This API provides read-only access to audit logs for security monitoring,
    compliance tracking, and system forensics. All audit logs are automatically
    generated by the system and cannot be modified or deleted through this API.

    **Note**: This is a read-only API. Audit logs are created automatically by the system
    when various actions occur, such as user authentication, resource modifications,
    and system events.
  version: 1.0.0
  contact:
    name: API Support
    email: support@company.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.company.com/v1
    description: Production server
  - url: https://staging-api.company.com/v1
    description: Staging server
  - url: http://localhost:3000/api/v1
    description: Development server

security:
  - BearerAuth: []

paths:
  # ==========================================
  # AUDIT LOG ENDPOINTS
  # ==========================================

  /audit/logs:
    get:
      tags:
        - Audit Logs
      summary: Get audit logs
      description: |
        Retrieve paginated audit logs with optional filtering and search capabilities.

        This endpoint supports comprehensive filtering by:
        - Date range (startDate, endDate)
        - User actions and resources
        - Severity levels
        - Status (success, failure, warning)
        - Text search across multiple fields

        Results are returned in descending chronological order (newest first).
      operationId: getAuditLogs
      parameters:
        - name: page
          in: query
          description: Page number for pagination (1-based)
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
            example: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
            example: 20
        - name: startDate
          in: query
          description: Filter logs from this date (ISO 8601 format)
          required: false
          schema:
            type: string
            format: date-time
            example: "2024-01-01T00:00:00Z"
        - name: endDate
          in: query
          description: Filter logs until this date (ISO 8601 format)
          required: false
          schema:
            type: string
            format: date-time
            example: "2024-12-31T23:59:59Z"
        - name: userId
          in: query
          description: Filter by specific user ID
          required: false
          schema:
            type: string
            example: "user-123"
        - name: action
          in: query
          description: Filter by audit action type
          required: false
          schema:
            $ref: '#/components/schemas/AuditAction'
        - name: resource
          in: query
          description: Filter by resource type
          required: false
          schema:
            $ref: '#/components/schemas/AuditResource'
        - name: status
          in: query
          description: Filter by audit status
          required: false
          schema:
            $ref: '#/components/schemas/AuditStatus'
        - name: severity
          in: query
          description: Filter by severity level
          required: false
          schema:
            $ref: '#/components/schemas/AuditSeverity'
        - name: tenantId
          in: query
          description: Filter by tenant ID
          required: false
          schema:
            type: string
            example: "tenant-123"
        - name: search
          in: query
          description: Search term for full-text search across description, resource name, and user details
          required: false
          schema:
            type: string
            example: "password reset"
        - name: sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            enum: [timestamp, action, user, resource, status, severity]
            default: timestamp
        - name: sortOrder
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Audit logs retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuditLogResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /audit/logs/{id}:
    get:
      tags:
        - Audit Logs
      summary: Get audit log by ID
      description: |
        Retrieve detailed information about a specific audit log entry by its ID.

        This endpoint returns comprehensive details including:
        - Full audit log information
        - Before/after changes (if applicable)
        - Complete metadata
        - Geographic location data (if available)
        - Request context information
      operationId: getAuditLogById
      parameters:
        - name: id
          in: path
          required: true
          description: Unique audit log ID
          schema:
            type: string
            example: "audit-log-123"
      responses:
        '200':
          description: Audit log retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
        '404':
          description: Audit log not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /audit/stats:
    get:
      tags:
        - Audit Statistics
      summary: Get audit statistics
      description: |
        Retrieve comprehensive audit statistics and analytics for monitoring and reporting.

        This endpoint provides:
        - Summary counts by status (success, failure, warning)
        - Top actions and most active users
        - Recent activity timeline
        - Trend analysis data

        Statistics can be filtered by date range and other criteria.
      operationId: getAuditStats
      parameters:
        - name: startDate
          in: query
          description: Start date for statistics calculation (ISO 8601 format)
          required: false
          schema:
            type: string
            format: date-time
            example: "2024-01-01T00:00:00Z"
        - name: endDate
          in: query
          description: End date for statistics calculation (ISO 8601 format)
          required: false
          schema:
            type: string
            format: date-time
            example: "2024-12-31T23:59:59Z"
        - name: tenantId
          in: query
          description: Filter statistics by tenant ID
          required: false
          schema:
            type: string
            example: "tenant-123"
        - name: userId
          in: query
          description: Filter statistics by user ID
          required: false
          schema:
            type: string
            example: "user-123"
        - name: groupBy
          in: query
          description: Group statistics by time period
          required: false
          schema:
            type: string
            enum: [hour, day, week, month]
            default: day
      responses:
        '200':
          description: Audit statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditStats'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # ==========================================
    # AUDIT LOG SCHEMAS
    # ==========================================

    AuditLog:
      type: object
      description: Complete audit log entry with all tracked information
      properties:
        id:
          type: string
          description: Unique identifier for the audit log entry
          example: "audit-log-123"
        timestamp:
          type: string
          format: date-time
          description: When the audited action occurred
          example: "2024-01-15T10:30:00Z"
        userId:
          type: string
          description: ID of the user who performed the action
          example: "user-123"
        userName:
          type: string
          description: Display name of the user
          example: "John Doe"
        userEmail:
          type: string
          format: email
          description: Email address of the user
          example: "john.doe@company.com"
        tenantId:
          type: string
          description: ID of the tenant/organization
          example: "tenant-123"
        tenantName:
          type: string
          description: Name of the tenant/organization
          nullable: true
          example: "Acme Corporation"
        action:
          $ref: '#/components/schemas/AuditAction'
        resource:
          $ref: '#/components/schemas/AuditResource'
        resourceId:
          type: string
          description: ID of the affected resource (if applicable)
          nullable: true
          example: "resource-456"
        resourceName:
          type: string
          description: Name of the affected resource (if applicable)
          nullable: true
          example: "Important Document"
        description:
          type: string
          description: Human-readable description of the action
          nullable: true
          example: "User updated document permissions"
        metadata:
          type: object
          description: Additional structured data related to the action
          nullable: true
          additionalProperties: true
          example:
            requestId: "req-789"
            sessionId: "sess-abc"
            apiVersion: "v1"
        changes:
          type: object
          description: Before and after values for update operations
          nullable: true
          properties:
            before:
              type: object
              description: State before the change
              nullable: true
              additionalProperties: true
            after:
              type: object
              description: State after the change
              nullable: true
              additionalProperties: true
          example:
            before:
              permission: "read"
            after:
              permission: "write"
        ipAddress:
          type: string
          description: IP address of the client that initiated the action
          nullable: true
          example: "192.168.1.100"
        userAgent:
          type: string
          description: User agent string of the client
          nullable: true
          example: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
        location:
          type: object
          description: Geographic location data (if available)
          nullable: true
          properties:
            country:
              type: string
              description: Country code or name
              nullable: true
              example: "United States"
            city:
              type: string
              description: City name
              nullable: true
              example: "San Francisco"
        status:
          $ref: '#/components/schemas/AuditStatus'
        severity:
          $ref: '#/components/schemas/AuditSeverity'
        errorMessage:
          type: string
          description: Error message if the action failed
          nullable: true
          example: "Insufficient permissions to perform this action"
        duration:
          type: integer
          description: Duration of the action in milliseconds
          nullable: true
          example: 150
      required:
        - id
        - timestamp
        - userId
        - userName
        - userEmail
        - tenantId
        - action
        - resource
        - status
        - severity

    AuditAction:
      type: string
      description: Type of action that was audited
      enum:
        # Authentication
        - LOGIN
        - LOGOUT
        - LOGIN_FAILED
        - PASSWORD_RESET
        # Resource operations
        - CREATE
        - UPDATE
        - DELETE
        - VIEW
        - EXPORT
        - IMPORT
        # Tenant operations
        - TENANT_CREATED
        - TENANT_UPDATED
        - TENANT_DELETED
        - TENANT_SWITCHED
        # User management
        - USER_INVITED
        - USER_ACTIVATED
        - USER_DEACTIVATED
        - USER_ROLE_CHANGED
        # Settings
        - SETTINGS_UPDATED
        - PERMISSION_CHANGED
        # API
        - API_KEY_CREATED
        - API_KEY_REVOKED
        # System
        - SYSTEM_ERROR
        - SYSTEM_WARNING
      example: LOGIN

    AuditResource:
      type: string
      description: Type of resource that was affected
      enum:
        - user
        - tenant
        - document
        - settings
        - api_key
        - role
        - permission
        - notification
        - report
        - system
      example: user

    AuditStatus:
      type: string
      description: Status/outcome of the audited action
      enum:
        - success
        - failure
        - warning
      example: success

    AuditSeverity:
      type: string
      description: Severity level of the audited action
      enum:
        - low
        - medium
        - high
        - critical
      example: medium

    # ==========================================
    # RESPONSE SCHEMAS
    # ==========================================

    PaginatedAuditLogResponse:
      type: object
      description: Paginated response containing audit logs
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
        total:
          type: integer
          description: Total number of audit logs matching the criteria
          example: 1500
        page:
          type: integer
          description: Current page number (1-based)
          example: 1
        pageSize:
          type: integer
          description: Number of items per page
          example: 20
        totalPages:
          type: integer
          description: Total number of pages
          example: 75
      required:
        - data
        - total
        - page
        - pageSize
        - totalPages

    AuditStats:
      type: object
      description: Comprehensive audit statistics and analytics
      properties:
        totalLogs:
          type: integer
          description: Total number of audit logs in the specified period
          example: 15432
        successCount:
          type: integer
          description: Number of successful actions
          example: 14821
        failureCount:
          type: integer
          description: Number of failed actions
          example: 523
        warningCount:
          type: integer
          description: Number of actions with warnings
          example: 88
        topActions:
          type: array
          description: Most frequent actions in the specified period
          items:
            type: object
            properties:
              action:
                $ref: '#/components/schemas/AuditAction'
              count:
                type: integer
                description: Number of times this action occurred
                example: 342
            required:
              - action
              - count
          example:
            - action: LOGIN
              count: 3421
            - action: VIEW
              count: 2876
            - action: UPDATE
              count: 1543
        topUsers:
          type: array
          description: Most active users in the specified period
          items:
            type: object
            properties:
              userId:
                type: string
                example: "user-123"
              userName:
                type: string
                example: "John Doe"
              count:
                type: integer
                description: Number of actions performed by this user
                example: 234
            required:
              - userId
              - userName
              - count
          example:
            - userId: "user-123"
              userName: "John Doe"
              count: 456
            - userId: "user-456"
              userName: "Jane Smith"
              count: 321
        recentActivity:
          type: array
          description: Recent audit log entries (last 10-20 items)
          items:
            $ref: '#/components/schemas/AuditLog'
      required:
        - totalLogs
        - successCount
        - failureCount
        - warningCount
        - topActions
        - topUsers
        - recentActivity

    # ==========================================
    # ERROR SCHEMAS
    # ==========================================

    ApiError:
      type: object
      description: Standard error response format
      properties:
        success:
          type: boolean
          enum: [false]
          example: false
        message:
          type: string
          description: Human-readable error message
          example: "Resource not found"
        error:
          type: object
          description: Additional error details
          properties:
            code:
              type: string
              description: Machine-readable error code
              example: "AUDIT_LOG_NOT_FOUND"
            details:
              type: object
              description: Additional context about the error
              additionalProperties: true
          example:
            code: "AUDIT_LOG_NOT_FOUND"
            details:
              auditLogId: "audit-log-123"
      required:
        - success
        - message

  responses:
    BadRequest:
      description: Bad request - Invalid input parameters or malformed request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            success: false
            message: "Invalid date range: startDate must be before endDate"
            error:
              code: "INVALID_DATE_RANGE"
              details:
                startDate: "2024-12-31T23:59:59Z"
                endDate: "2024-01-01T00:00:00Z"

    Unauthorized:
      description: Unauthorized - Authentication required or token invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            success: false
            message: "Authentication required"
            error:
              code: "UNAUTHORIZED"

    Forbidden:
      description: Forbidden - Insufficient permissions to access audit logs
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            success: false
            message: "Insufficient permissions to access audit logs"
            error:
              code: "INSUFFICIENT_PERMISSIONS"
              details:
                requiredPermission: "audit:read"

    InternalServerError:
      description: Internal server error - Unexpected server-side error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            success: false
            message: "An unexpected error occurred while processing the request"
            error:
              code: "INTERNAL_SERVER_ERROR"

tags:
  - name: Audit Logs
    description: |
      Read-only access to system audit logs for security monitoring and compliance.

      Audit logs automatically track all significant actions in the system including:
      - User authentication and authorization events
      - Resource creation, modification, and deletion
      - Configuration changes and settings updates
      - API access and system operations

      All audit logs are immutable and cannot be modified or deleted through the API.

  - name: Audit Statistics
    description: |
      Analytics and reporting endpoints for audit log data.

      Provides aggregated statistics and insights including:
      - Success/failure/warning counts
      - Top actions and most active users
      - Time-based trend analysis
      - Recent activity summaries

      Useful for monitoring system health, user behavior analysis, and compliance reporting.